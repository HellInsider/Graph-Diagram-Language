# Generated from ../antlrInput/GDL.g4 by ANTLR 4.9.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2>")
        buf.write("\u01bd\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64")
        buf.write("\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:")
        buf.write("\4;\t;\4<\t<\4=\t=\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\4")
        buf.write("\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\7\3\7\3\7\3")
        buf.write("\7\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t\3\t\3\n")
        buf.write("\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\f\3\f\3\f\3")
        buf.write("\f\3\f\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\17")
        buf.write("\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\21")
        buf.write("\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22")
        buf.write("\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\24")
        buf.write("\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25")
        buf.write("\3\25\3\25\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\32")
        buf.write("\3\32\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\35\3\36\3\36")
        buf.write("\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3!\3!\3!\3!\3!")
        buf.write("\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3#\3#\3$\3$\3$\3$")
        buf.write("\3$\3$\3%\3%\3%\3%\3%\3%\3&\3&\3&\3&\3&\3\'\3\'\3\'\3")
        buf.write("\'\3\'\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3(\3)\3)\3)\3)\3")
        buf.write(")\3)\3)\3)\3)\3)\3*\3*\3*\3*\3*\3*\3*\3*\3*\3*\3+\3+\3")
        buf.write("+\3+\3+\3+\3+\3+\3,\3,\3,\3,\3,\3,\3,\3,\3,\3,\3-\3-\3")
        buf.write("-\3-\3-\3-\3.\3.\3.\3.\3.\3/\3/\3/\3/\3/\3/\3\60\3\60")
        buf.write("\3\60\3\61\3\61\3\61\3\61\3\61\3\62\3\62\3\62\3\62\3\63")
        buf.write("\3\63\3\63\3\63\3\64\3\64\3\64\3\64\3\65\3\65\3\65\3\65")
        buf.write("\3\66\3\66\3\66\3\66\3\66\3\66\3\66\3\67\6\67\u018d\n")
        buf.write("\67\r\67\16\67\u018e\38\68\u0192\n8\r8\168\u0193\39\3")
        buf.write("9\69\u0198\n9\r9\169\u0199\3:\6:\u019d\n:\r:\16:\u019e")
        buf.write("\3;\3;\3;\3;\3<\3<\3<\3<\7<\u01a9\n<\f<\16<\u01ac\13<")
        buf.write("\3<\3<\3<\3<\3<\3=\3=\3=\3=\7=\u01b7\n=\f=\16=\u01ba\13")
        buf.write("=\3=\3=\3\u01aa\2>\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n")
        buf.write("\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'")
        buf.write("\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ")
        buf.write("?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g")
        buf.write("\65i\66k\67m8o9q:s;u<w=y>\3\2\6\5\2\62;C\\c|\7\2#),-/")
        buf.write(";A\\`|\5\2\13\f\17\17\"\"\4\2\f\f\17\17\2\u01c3\2\3\3")
        buf.write("\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2")
        buf.write("\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2")
        buf.write("\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2")
        buf.write("\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2")
        buf.write("\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3")
        buf.write("\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2")
        buf.write("\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3")
        buf.write("\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K")
        buf.write("\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2")
        buf.write("U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2")
        buf.write("\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2")
        buf.write("\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2")
        buf.write("\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\3{\3")
        buf.write("\2\2\2\5\u0081\3\2\2\2\7\u0083\3\2\2\2\t\u0085\3\2\2\2")
        buf.write("\13\u008c\3\2\2\2\r\u008e\3\2\2\2\17\u0092\3\2\2\2\21")
        buf.write("\u0098\3\2\2\2\23\u009e\3\2\2\2\25\u00a4\3\2\2\2\27\u00a8")
        buf.write("\3\2\2\2\31\u00ad\3\2\2\2\33\u00af\3\2\2\2\35\u00b6\3")
        buf.write("\2\2\2\37\u00ba\3\2\2\2!\u00be\3\2\2\2#\u00c4\3\2\2\2")
        buf.write("%\u00cf\3\2\2\2\'\u00d7\3\2\2\2)\u00dc\3\2\2\2+\u00e5")
        buf.write("\3\2\2\2-\u00e7\3\2\2\2/\u00e9\3\2\2\2\61\u00eb\3\2\2")
        buf.write("\2\63\u00ed\3\2\2\2\65\u00ef\3\2\2\2\67\u00f1\3\2\2\2")
        buf.write("9\u00f4\3\2\2\2;\u00f7\3\2\2\2=\u00f9\3\2\2\2?\u00fd\3")
        buf.write("\2\2\2A\u0103\3\2\2\2C\u0108\3\2\2\2E\u010d\3\2\2\2G\u0114")
        buf.write("\3\2\2\2I\u011a\3\2\2\2K\u0120\3\2\2\2M\u0125\3\2\2\2")
        buf.write("O\u012a\3\2\2\2Q\u0135\3\2\2\2S\u013f\3\2\2\2U\u0149\3")
        buf.write("\2\2\2W\u0151\3\2\2\2Y\u015b\3\2\2\2[\u0161\3\2\2\2]\u0166")
        buf.write("\3\2\2\2_\u016c\3\2\2\2a\u016f\3\2\2\2c\u0174\3\2\2\2")
        buf.write("e\u0178\3\2\2\2g\u017c\3\2\2\2i\u0180\3\2\2\2k\u0184\3")
        buf.write("\2\2\2m\u018c\3\2\2\2o\u0191\3\2\2\2q\u0197\3\2\2\2s\u019c")
        buf.write("\3\2\2\2u\u01a0\3\2\2\2w\u01a4\3\2\2\2y\u01b2\3\2\2\2")
        buf.write("{|\7I\2\2|}\7t\2\2}~\7c\2\2~\177\7r\2\2\177\u0080\7j\2")
        buf.write("\2\u0080\4\3\2\2\2\u0081\u0082\7}\2\2\u0082\6\3\2\2\2")
        buf.write("\u0083\u0084\7\177\2\2\u0084\b\3\2\2\2\u0085\u0086\7n")
        buf.write("\2\2\u0086\u0087\7c\2\2\u0087\u0088\7{\2\2\u0088\u0089")
        buf.write("\7q\2\2\u0089\u008a\7w\2\2\u008a\u008b\7v\2\2\u008b\n")
        buf.write("\3\2\2\2\u008c\u008d\7<\2\2\u008d\f\3\2\2\2\u008e\u008f")
        buf.write("\7f\2\2\u008f\u0090\7q\2\2\u0090\u0091\7v\2\2\u0091\16")
        buf.write("\3\2\2\2\u0092\u0093\7p\2\2\u0093\u0094\7g\2\2\u0094\u0095")
        buf.write("\7c\2\2\u0095\u0096\7v\2\2\u0096\u0097\7q\2\2\u0097\20")
        buf.write("\3\2\2\2\u0098\u0099\7v\2\2\u0099\u009a\7y\2\2\u009a\u009b")
        buf.write("\7q\2\2\u009b\u009c\7r\2\2\u009c\u009d\7k\2\2\u009d\22")
        buf.write("\3\2\2\2\u009e\u009f\7e\2\2\u009f\u00a0\7k\2\2\u00a0\u00a1")
        buf.write("\7t\2\2\u00a1\u00a2\7e\2\2\u00a2\u00a3\7q\2\2\u00a3\24")
        buf.write("\3\2\2\2\u00a4\u00a5\7h\2\2\u00a5\u00a6\7f\2\2\u00a6\u00a7")
        buf.write("\7r\2\2\u00a7\26\3\2\2\2\u00a8\u00a9\7u\2\2\u00a9\u00aa")
        buf.write("\7h\2\2\u00aa\u00ab\7f\2\2\u00ab\u00ac\7r\2\2\u00ac\30")
        buf.write("\3\2\2\2\u00ad\u00ae\7=\2\2\u00ae\32\3\2\2\2\u00af\u00b0")
        buf.write("\7u\2\2\u00b0\u00b1\7c\2\2\u00b1\u00b2\7x\2\2\u00b2\u00b3")
        buf.write("\7g\2\2\u00b3\u00b4\7C\2\2\u00b4\u00b5\7u\2\2\u00b5\34")
        buf.write("\3\2\2\2\u00b6\u00b7\7r\2\2\u00b7\u00b8\7p\2\2\u00b8\u00b9")
        buf.write("\7i\2\2\u00b9\36\3\2\2\2\u00ba\u00bb\7l\2\2\u00bb\u00bc")
        buf.write("\7r\2\2\u00bc\u00bd\7i\2\2\u00bd \3\2\2\2\u00be\u00bf")
        buf.write("\7v\2\2\u00bf\u00c0\7k\2\2\u00c0\u00c1\7v\2\2\u00c1\u00c2")
        buf.write("\7n\2\2\u00c2\u00c3\7g\2\2\u00c3\"\3\2\2\2\u00c4\u00c5")
        buf.write("\7d\2\2\u00c5\u00c6\7c\2\2\u00c6\u00c7\7e\2\2\u00c7\u00c8")
        buf.write("\7m\2\2\u00c8\u00c9\7i\2\2\u00c9\u00ca\7t\2\2\u00ca\u00cb")
        buf.write("\7q\2\2\u00cb\u00cc\7w\2\2\u00cc\u00cd\7p\2\2\u00cd\u00ce")
        buf.write("\7f\2\2\u00ce$\3\2\2\2\u00cf\u00d0\7h\2\2\u00d0\u00d1")
        buf.write("\7q\2\2\u00d1\u00d2\7p\2\2\u00d2\u00d3\7v\2\2\u00d3\u00d4")
        buf.write("\7E\2\2\u00d4\u00d5\7n\2\2\u00d5\u00d6\7t\2\2\u00d6&\3")
        buf.write("\2\2\2\u00d7\u00d8\7h\2\2\u00d8\u00d9\7q\2\2\u00d9\u00da")
        buf.write("\7p\2\2\u00da\u00db\7v\2\2\u00db(\3\2\2\2\u00dc\u00dd")
        buf.write("\7h\2\2\u00dd\u00de\7q\2\2\u00de\u00df\7p\2\2\u00df\u00e0")
        buf.write("\7v\2\2\u00e0\u00e1\7U\2\2\u00e1\u00e2\7k\2\2\u00e2\u00e3")
        buf.write("\7|\2\2\u00e3\u00e4\7g\2\2\u00e4*\3\2\2\2\u00e5\u00e6")
        buf.write("\7?\2\2\u00e6,\3\2\2\2\u00e7\u00e8\7]\2\2\u00e8.\3\2\2")
        buf.write("\2\u00e9\u00ea\7_\2\2\u00ea\60\3\2\2\2\u00eb\u00ec\7.")
        buf.write("\2\2\u00ec\62\3\2\2\2\u00ed\u00ee\7*\2\2\u00ee\64\3\2")
        buf.write("\2\2\u00ef\u00f0\7+\2\2\u00f0\66\3\2\2\2\u00f1\u00f2\7")
        buf.write("/\2\2\u00f2\u00f3\7@\2\2\u00f38\3\2\2\2\u00f4\u00f5\7")
        buf.write(">\2\2\u00f5\u00f6\7/\2\2\u00f6:\3\2\2\2\u00f7\u00f8\7")
        buf.write("/\2\2\u00f8<\3\2\2\2\u00f9\u00fa\7T\2\2\u00fa\u00fb\7")
        buf.write("g\2\2\u00fb\u00fc\7f\2\2\u00fc>\3\2\2\2\u00fd\u00fe\7")
        buf.write("I\2\2\u00fe\u00ff\7t\2\2\u00ff\u0100\7g\2\2\u0100\u0101")
        buf.write("\7g\2\2\u0101\u0102\7p\2\2\u0102@\3\2\2\2\u0103\u0104")
        buf.write("\7D\2\2\u0104\u0105\7n\2\2\u0105\u0106\7w\2\2\u0106\u0107")
        buf.write("\7g\2\2\u0107B\3\2\2\2\u0108\u0109\7I\2\2\u0109\u010a")
        buf.write("\7t\2\2\u010a\u010b\7c\2\2\u010b\u010c\7{\2\2\u010cD\3")
        buf.write("\2\2\2\u010d\u010e\7[\2\2\u010e\u010f\7g\2\2\u010f\u0110")
        buf.write("\7n\2\2\u0110\u0111\7n\2\2\u0111\u0112\7q\2\2\u0112\u0113")
        buf.write("\7y\2\2\u0113F\3\2\2\2\u0114\u0115\7D\2\2\u0115\u0116")
        buf.write("\7n\2\2\u0116\u0117\7c\2\2\u0117\u0118\7e\2\2\u0118\u0119")
        buf.write("\7m\2\2\u0119H\3\2\2\2\u011a\u011b\7Y\2\2\u011b\u011c")
        buf.write("\7j\2\2\u011c\u011d\7k\2\2\u011d\u011e\7v\2\2\u011e\u011f")
        buf.write("\7g\2\2\u011fJ\3\2\2\2\u0120\u0121\7R\2\2\u0121\u0122")
        buf.write("\7k\2\2\u0122\u0123\7p\2\2\u0123\u0124\7m\2\2\u0124L\3")
        buf.write("\2\2\2\u0125\u0126\7E\2\2\u0126\u0127\7{\2\2\u0127\u0128")
        buf.write("\7c\2\2\u0128\u0129\7p\2\2\u0129N\3\2\2\2\u012a\u012b")
        buf.write("\7x\2\2\u012b\u012c\7g\2\2\u012c\u012d\7t\2\2\u012d\u012e")
        buf.write("\7v\2\2\u012e\u012f\7g\2\2\u012f\u0130\7z\2\2\u0130\u0131")
        buf.write("\7U\2\2\u0131\u0132\7k\2\2\u0132\u0133\7|\2\2\u0133\u0134")
        buf.write("\7g\2\2\u0134P\3\2\2\2\u0135\u0136\7x\2\2\u0136\u0137")
        buf.write("\7g\2\2\u0137\u0138\7t\2\2\u0138\u0139\7v\2\2\u0139\u013a")
        buf.write("\7g\2\2\u013a\u013b\7z\2\2\u013b\u013c\7E\2\2\u013c\u013d")
        buf.write("\7n\2\2\u013d\u013e\7t\2\2\u013eR\3\2\2\2\u013f\u0140")
        buf.write("\7g\2\2\u0140\u0141\7f\2\2\u0141\u0142\7i\2\2\u0142\u0143")
        buf.write("\7g\2\2\u0143\u0144\7V\2\2\u0144\u0145\7j\2\2\u0145\u0146")
        buf.write("\7k\2\2\u0146\u0147\7e\2\2\u0147\u0148\7m\2\2\u0148T\3")
        buf.write("\2\2\2\u0149\u014a\7g\2\2\u014a\u014b\7f\2\2\u014b\u014c")
        buf.write("\7i\2\2\u014c\u014d\7g\2\2\u014d\u014e\7E\2\2\u014e\u014f")
        buf.write("\7n\2\2\u014f\u0150\7t\2\2\u0150V\3\2\2\2\u0151\u0152")
        buf.write("\7N\2\2\u0152\u0153\7k\2\2\u0153\u0154\7i\2\2\u0154\u0155")
        buf.write("\7j\2\2\u0155\u0156\7v\2\2\u0156\u0157\7I\2\2\u0157\u0158")
        buf.write("\7t\2\2\u0158\u0159\7c\2\2\u0159\u015a\7{\2\2\u015aX\3")
        buf.write("\2\2\2\u015b\u015c\7r\2\2\u015c\u015d\7n\2\2\u015d\u015e")
        buf.write("\7c\2\2\u015e\u015f\7e\2\2\u015f\u0160\7g\2\2\u0160Z\3")
        buf.write("\2\2\2\u0161\u0162\7N\2\2\u0162\u0163\7g\2\2\u0163\u0164")
        buf.write("\7h\2\2\u0164\u0165\7v\2\2\u0165\\\3\2\2\2\u0166\u0167")
        buf.write("\7T\2\2\u0167\u0168\7k\2\2\u0168\u0169\7i\2\2\u0169\u016a")
        buf.write("\7j\2\2\u016a\u016b\7v\2\2\u016b^\3\2\2\2\u016c\u016d")
        buf.write("\7W\2\2\u016d\u016e\7r\2\2\u016e`\3\2\2\2\u016f\u0170")
        buf.write("\7F\2\2\u0170\u0171\7q\2\2\u0171\u0172\7y\2\2\u0172\u0173")
        buf.write("\7p\2\2\u0173b\3\2\2\2\u0174\u0175\7W\2\2\u0175\u0176")
        buf.write("\7/\2\2\u0176\u0177\7N\2\2\u0177d\3\2\2\2\u0178\u0179")
        buf.write("\7W\2\2\u0179\u017a\7/\2\2\u017a\u017b\7T\2\2\u017bf\3")
        buf.write("\2\2\2\u017c\u017d\7F\2\2\u017d\u017e\7/\2\2\u017e\u017f")
        buf.write("\7N\2\2\u017fh\3\2\2\2\u0180\u0181\7F\2\2\u0181\u0182")
        buf.write("\7/\2\2\u0182\u0183\7T\2\2\u0183j\3\2\2\2\u0184\u0185")
        buf.write("\7E\2\2\u0185\u0186\7g\2\2\u0186\u0187\7p\2\2\u0187\u0188")
        buf.write("\7v\2\2\u0188\u0189\7g\2\2\u0189\u018a\7t\2\2\u018al\3")
        buf.write("\2\2\2\u018b\u018d\4\62;\2\u018c\u018b\3\2\2\2\u018d\u018e")
        buf.write("\3\2\2\2\u018e\u018c\3\2\2\2\u018e\u018f\3\2\2\2\u018f")
        buf.write("n\3\2\2\2\u0190\u0192\t\2\2\2\u0191\u0190\3\2\2\2\u0192")
        buf.write("\u0193\3\2\2\2\u0193\u0191\3\2\2\2\u0193\u0194\3\2\2\2")
        buf.write("\u0194p\3\2\2\2\u0195\u0198\t\3\2\2\u0196\u0198\5s:\2")
        buf.write("\u0197\u0195\3\2\2\2\u0197\u0196\3\2\2\2\u0198\u0199\3")
        buf.write("\2\2\2\u0199\u0197\3\2\2\2\u0199\u019a\3\2\2\2\u019ar")
        buf.write("\3\2\2\2\u019b\u019d\4\u0412\u0451\2\u019c\u019b\3\2\2")
        buf.write("\2\u019d\u019e\3\2\2\2\u019e\u019c\3\2\2\2\u019e\u019f")
        buf.write("\3\2\2\2\u019ft\3\2\2\2\u01a0\u01a1\t\4\2\2\u01a1\u01a2")
        buf.write("\3\2\2\2\u01a2\u01a3\b;\2\2\u01a3v\3\2\2\2\u01a4\u01a5")
        buf.write("\7\61\2\2\u01a5\u01a6\7,\2\2\u01a6\u01aa\3\2\2\2\u01a7")
        buf.write("\u01a9\13\2\2\2\u01a8\u01a7\3\2\2\2\u01a9\u01ac\3\2\2")
        buf.write("\2\u01aa\u01ab\3\2\2\2\u01aa\u01a8\3\2\2\2\u01ab\u01ad")
        buf.write("\3\2\2\2\u01ac\u01aa\3\2\2\2\u01ad\u01ae\7,\2\2\u01ae")
        buf.write("\u01af\7\61\2\2\u01af\u01b0\3\2\2\2\u01b0\u01b1\b<\2\2")
        buf.write("\u01b1x\3\2\2\2\u01b2\u01b3\7\61\2\2\u01b3\u01b4\7\61")
        buf.write("\2\2\u01b4\u01b8\3\2\2\2\u01b5\u01b7\n\5\2\2\u01b6\u01b5")
        buf.write("\3\2\2\2\u01b7\u01ba\3\2\2\2\u01b8\u01b6\3\2\2\2\u01b8")
        buf.write("\u01b9\3\2\2\2\u01b9\u01bb\3\2\2\2\u01ba\u01b8\3\2\2\2")
        buf.write("\u01bb\u01bc\b=\2\2\u01bcz\3\2\2\2\f\2\u018e\u0191\u0193")
        buf.write("\u0197\u0199\u019c\u019e\u01aa\u01b8\3\b\2\2")
        return buf.getvalue()


class GDLLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    T__46 = 47
    T__47 = 48
    T__48 = 49
    T__49 = 50
    T__50 = 51
    T__51 = 52
    T__52 = 53
    INTEGER = 54
    TEXT = 55
    EXTENDETTEXT = 56
    CYRILLIC = 57
    SPACE = 58
    COMMENT = 59
    LINE_COMMENT = 60

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'Graph'", "'{'", "'}'", "'layout'", "':'", "'dot'", "'neato'", 
            "'twopi'", "'circo'", "'fdp'", "'sfdp'", "';'", "'saveAs'", 
            "'png'", "'jpg'", "'title'", "'background'", "'fontClr'", "'font'", 
            "'fontSize'", "'='", "'['", "']'", "','", "'('", "')'", "'->'", 
            "'<-'", "'-'", "'Red'", "'Green'", "'Blue'", "'Gray'", "'Yellow'", 
            "'Black'", "'White'", "'Pink'", "'Cyan'", "'vertexSize'", "'vertexClr'", 
            "'edgeThick'", "'edgeClr'", "'LightGray'", "'place'", "'Left'", 
            "'Right'", "'Up'", "'Down'", "'U-L'", "'U-R'", "'D-L'", "'D-R'", 
            "'Center'" ]

    symbolicNames = [ "<INVALID>",
            "INTEGER", "TEXT", "EXTENDETTEXT", "CYRILLIC", "SPACE", "COMMENT", 
            "LINE_COMMENT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "T__46", "T__47", "T__48", "T__49", 
                  "T__50", "T__51", "T__52", "INTEGER", "TEXT", "EXTENDETTEXT", 
                  "CYRILLIC", "SPACE", "COMMENT", "LINE_COMMENT" ]

    grammarFileName = "GDL.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.9.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


